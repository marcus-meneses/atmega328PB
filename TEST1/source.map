Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
                              serial.o (__udivmodsi4)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              source.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              serial.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o
LOAD source.o
LOAD uart.o
LOAD spi.o
LOAD sram.o
LOAD serial.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/libatmega328pb.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x6be
 *(.vectors)
 .vectors       0x0000000000000000       0xb4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000000000000b4                . = ALIGN (0x2)
                0x00000000000000b4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000b4        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000b4                __trampolines_end = .
 *(.progmem*)
                0x00000000000000b4                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000b4                __ctors_start = .
 *(.ctors)
                0x00000000000000b4                __ctors_end = .
                0x00000000000000b4                __dtors_start = .
 *(.dtors)
                0x00000000000000b4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000b4        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o
                0x00000000000000b4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000b4        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000c0       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x00000000000000c0                __do_copy_data
 .init4         0x00000000000000d6       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000d6                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000e6        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o
 *(.init9)
 *(.text)
 .text          0x00000000000000ee        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o
                0x00000000000000ee                __vector_38
                0x00000000000000ee                __vector_22
                0x00000000000000ee                __vector_1
                0x00000000000000ee                __vector_32
                0x00000000000000ee                __vector_34
                0x00000000000000ee                __vector_24
                0x00000000000000ee                __vector_12
                0x00000000000000ee                __bad_interrupt
                0x00000000000000ee                __vector_6
                0x00000000000000ee                __vector_31
                0x00000000000000ee                __vector_35
                0x00000000000000ee                __vector_39
                0x00000000000000ee                __vector_3
                0x00000000000000ee                __vector_23
                0x00000000000000ee                __vector_30
                0x00000000000000ee                __vector_25
                0x00000000000000ee                __vector_11
                0x00000000000000ee                __vector_13
                0x00000000000000ee                __vector_17
                0x00000000000000ee                __vector_19
                0x00000000000000ee                __vector_7
                0x00000000000000ee                __vector_41
                0x00000000000000ee                __vector_43
                0x00000000000000ee                __vector_27
                0x00000000000000ee                __vector_5
                0x00000000000000ee                __vector_33
                0x00000000000000ee                __vector_37
                0x00000000000000ee                __vector_4
                0x00000000000000ee                __vector_44
                0x00000000000000ee                __vector_9
                0x00000000000000ee                __vector_2
                0x00000000000000ee                __vector_21
                0x00000000000000ee                __vector_15
                0x00000000000000ee                __vector_36
                0x00000000000000ee                __vector_29
                0x00000000000000ee                __vector_40
                0x00000000000000ee                __vector_8
                0x00000000000000ee                __vector_26
                0x00000000000000ee                __vector_14
                0x00000000000000ee                __vector_10
                0x00000000000000ee                __vector_16
                0x00000000000000ee                __vector_20
                0x00000000000000ee                __vector_42
 .text          0x00000000000000f2       0x56 source.o
                0x00000000000000f2                setup
                0x0000000000000118                loop
 .text          0x0000000000000148       0x98 uart.o
                0x0000000000000148                uart1_init
                0x0000000000000162                uart0_init
                0x000000000000017c                uart1_send
                0x000000000000018a                uart0_send
                0x0000000000000198                uart1_receive
                0x00000000000001a6                uart0_receive
                0x00000000000001b4                uart1_flush
                0x00000000000001c4                uart0_flush
                0x00000000000001d4                uart1_end
                0x00000000000001da                uart0_end
 .text          0x00000000000001e0       0x74 spi.o
                0x00000000000001e0                spi1_init_master
                0x00000000000001fc                spi1_begin
                0x0000000000000202                spi1_end
                0x0000000000000210                spi1_transmit
                0x0000000000000222                spi0_init_master
                0x0000000000000238                spi0_begin
                0x000000000000023e                spi0_end
                0x0000000000000248                spi0_transmit
 .text          0x0000000000000254      0x1c2 sram.o
                0x0000000000000254                start_sram
                0x0000000000000260                end_sram
                0x0000000000000268                sram_transmit
                0x000000000000026c                mem_read
                0x00000000000002b8                mem_write
                0x0000000000000306                mem_ssr
                0x0000000000000342                mem_pop
                0x0000000000000348                mem_esr
                0x000000000000034c                mem_ssw
                0x0000000000000388                mem_clear
                0x000000000000040e                mem_push
                0x0000000000000412                mem_esw
 .text          0x0000000000000416      0x246 serial.o
                0x0000000000000416                __vector_18
                0x0000000000000460                __vector_28
                0x0000000000000474                Serial0_begin
                0x000000000000049a                Serial1_begin
                0x00000000000004c0                Serial0_end
                0x00000000000004c4                Serial1_end
                0x00000000000004c8                Serial1_print
                0x0000000000000528                Serial1_println
                0x0000000000000592                Serial0_print
                0x00000000000005f2                Serial0_println
 .text          0x000000000000065c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x000000000000065c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x000000000000065c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000065c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000065c                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000065c       0x1a source.o
                0x000000000000065c                main
 .text.libgcc.mul
                0x0000000000000676        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000676       0x44 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
                0x0000000000000676                __udivmodsi4
 .text.libgcc   0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000006ba                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x00000000000006ba                exit
                0x00000000000006ba                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000006ba        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000006be                _etext = .

.data           0x0000000000800100       0x1c load address 0x00000000000006be
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o
 .data          0x0000000000800100       0x1c source.o
                0x0000000000800100                text
 .data          0x000000000080011c        0x0 uart.o
 .data          0x000000000080011c        0x0 spi.o
 .data          0x000000000080011c        0x0 sram.o
 .data          0x000000000080011c        0x0 serial.o
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080011c                . = ALIGN (0x2)
                0x000000000080011c                _edata = .
                0x000000000080011c                PROVIDE (__data_end, .)

.bss            0x000000000080011c       0x1c
                0x000000000080011c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080011c        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o
 .bss           0x000000000080011c        0x0 source.o
 .bss           0x000000000080011c        0x0 uart.o
 .bss           0x000000000080011c        0x0 spi.o
 .bss           0x000000000080011c        0x0 sram.o
 .bss           0x000000000080011c       0x1c serial.o
                0x000000000080011c                Serial1_output_full
                0x000000000080011d                Serial1_output_count
                0x000000000080011f                Serial1_output_tail
                0x0000000000800121                Serial1_output_head
                0x0000000000800123                Serial1_input_full
                0x0000000000800124                Serial1_input_count
                0x0000000000800126                Serial1_input_tail
                0x0000000000800128                Serial1_input_head
                0x000000000080012a                Serial0_output_full
                0x000000000080012b                Serial0_output_count
                0x000000000080012d                Serial0_output_tail
                0x000000000080012f                Serial0_output_head
                0x0000000000800131                Serial0_input_full
                0x0000000000800132                Serial0_input_count
                0x0000000000800134                Serial0_input_tail
                0x0000000000800136                Serial0_input_head
 .bss           0x0000000000800138        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800138        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800138        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800138        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800138                PROVIDE (__bss_end, .)
                0x00000000000006be                __data_load_start = LOADADDR (.data)
                0x00000000000006da                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800138        0x0
                0x0000000000800138                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800138                PROVIDE (__noinit_end, .)
                0x0000000000800138                _end = .
                0x0000000000800138                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x2310
 *(.stab)
 .stab          0x0000000000000000      0x5d0 source.o
 .stab          0x00000000000005d0      0x6f0 uart.o
                                        0x8b8 (size before relaxing)
 .stab          0x0000000000000cc0      0x5d0 spi.o
                                        0x780 (size before relaxing)
 .stab          0x0000000000001290      0x81c sram.o
                                        0x9d8 (size before relaxing)
 .stab          0x0000000000001aac      0x864 serial.o
                                        0xa44 (size before relaxing)

.stabstr        0x0000000000000000     0x1231
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1231 source.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 source.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 uart.o
 .comment       0x0000000000000011       0x12 spi.o
 .comment       0x0000000000000011       0x12 sram.o
 .comment       0x0000000000000011       0x12 serial.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x8ea
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x8ea /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o

.debug_abbrev   0x0000000000000000      0x86e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x86e /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o

.debug_line     0x0000000000000000      0x1a5
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x1a5 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x318
 *(.debug_str)
 .debug_str     0x0000000000000000      0x318 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/crtatmega328pb.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(source.elf elf32-avr)
LOAD linker stubs
